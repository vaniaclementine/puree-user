generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  Driver        Driver?
  Merchant      Merchant?
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Address {
  id             String   @id
  province       String
  city           String
  address_line_1 String
  merchantId     String   @unique
  Merchant       Merchant @relation(fields: [merchantId], references: [userId])
}

model Driver {
  id        String    @id
  email     String    @unique
  phone     String    @unique
  password  String
  name      String?
  photo     String?
  createdAt DateTime  @default(now())
  balance   Int?
  userId    String    @unique
  User      User      @relation(fields: [userId], references: [id])
  Vehicle   Vehicle[]
}

model Item {
  id          String   @id
  name        String
  description String
  price       Int
  picture     String?
  merchantId  String 
  Merchant    Merchant @relation(fields: [merchantId], references: [id])
  carts     Cart[]
}

model Cart {
  id          String      @id
  createdAt   DateTime @default(now())
  quantity    Int
  totalPrice Float

  // Define the many-to-one relationship with item
  itemId      String
  item        Item     @relation(fields: [itemId], references: [id])
}

model Merchant {
  id       String   @id
  email    String   @unique
  password String
  phone    String   @unique
  name     String?  @unique
  balance  String?
  userId   String   @unique
  Address  Address?
  Item     Item[]
  User     User     @relation(fields: [userId], references: [id])
}

model Vehicle {
  id          String   @id
  plateNumber String   @unique
  brand       String
  series      String
  color       String
  year        DateTime
  driverId    String
  Driver      Driver   @relation(fields: [driverId], references: [id], onDelete: Cascade)
}
